name: Continuous Integration

on:
  push: 
    branches:
        - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies for frontend
      run: npm ci

    - name: Run tests for frontend
      run: npm run coverage

    - name: Upload coverage to artifact
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage

  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.PAT }}

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20.x'

    - name: Install Dependencies
      working-directory:
      run: npm ci

    - name: Format 
      run: npm run format

    - name: Commit changes
      id: commit
      run: |
        git config --local user.email "yjack0000.cs12@nycu.edu.tw"
        git config --local user.name "YJack0000"
        git add .
        if git diff --staged --quiet; then
          echo "No changes to commit."
          echo "::set-output name=changes::false"
        else
          git commit -m "style: Format code"
          echo "::set-output name=changes::true"
        fi
    - name: Push changes
      if: steps.commit.outputs.changes == 'true'
      run: git push

  publish:
    runs-on: ubuntu-latest
    needs: [test, format]
    steps:
    - uses: actions/checkout@v3
    - name: Build Docker Images
      run: |
        docker build -t ghcr.io/yjack0000/document-center-fe .
    - name: Push to GitHub Container Registry with tag
      run: |
        docker login ghcr.io -u yjack0000 --password ${{ secrets.PACKAGE_PAT }}
        docker push ghcr.io/yjack0000/document-center-fe